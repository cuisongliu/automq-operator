name: üîç Go for Push

on:
  push:
    branches: [ main ]

jobs:
  job0:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Set up Go
        uses: actions/setup-go@master
        with:
          go-version: 1.23.x

      - name: Prepare
        id: prepare
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo ::set-output name=tag_name::${TAG}
      - name: set up buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}
      - name: build (and publish) main image
        env:
          # fork friendly ^^
          DOCKER_REPO: ghcr.io/${{ github.repository_owner }}/automq-operator
        run: |
          IMG=${DOCKER_REPO}:latest make docker-buildx

  job1:
    runs-on: ubuntu-20.04
    needs: job0
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Set up Go
        uses: actions/setup-go@master
        with:
          go-version: 1.23.x

      - name: Verify sealos
        run: |
          wget -q https://github.com/labring/sealos/releases/download/v4.3.7/sealos_4.3.7_linux_amd64.tar.gz
          tar -zxvf sealos_4.3.7_linux_amd64.tar.gz sealos
          sudo chmod a+x sealos
          sudo mv sealos /usr/bin/
          sudo sealos version
      - name: build
        run: |
          go run gen/version/gen.go ghcr.io/${{ github.repository_owner }}/automq-operator:latest && make info
          cd deploy
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/automq-operator-sealos:latest"
          sudo sealos build -t "${IMAGE_NAME}"-amd64 --platform linux/amd64 . && sudo rm -rf registry
          sudo sealos build -t "${IMAGE_NAME}"-arm64 --platform linux/arm64 . && sudo rm -rf registry
          sudo sealos login -u ${{ github.repository_owner }} -p ${{ secrets.GH_TOKEN }} --debug ghcr.io
          sudo sealos push "${IMAGE_NAME}"-amd64
          sudo sealos push "${IMAGE_NAME}"-arm64
          sudo sealos images
          sudo sealos manifest create "${IMAGE_NAME}"
          sudo sealos manifest add "$IMAGE_NAME" docker://"$IMAGE_NAME-amd64"
          sudo sealos manifest add "$IMAGE_NAME" docker://"$IMAGE_NAME-arm64"
          sudo sealos manifest push --all "$IMAGE_NAME" docker://"$IMAGE_NAME" && echo "$IMAGE_NAME push success"
          sudo sealos images

