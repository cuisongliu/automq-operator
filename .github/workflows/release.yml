name: ðŸš€ Release

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+*"]
  workflow_dispatch:

jobs:
  job0:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Prepare
        id: prepare
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo ::set-output name=tag_name::${TAG}
      - name: set up buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}
      - name: build (and publish) main image
        env:
          # fork friendly ^^
          DOCKER_REPO: ghcr.io/${{ github.repository_owner }}/automq-operator
        run: |
          IMG=${DOCKER_REPO}:${{ steps.prepare.outputs.tag_name }} make docker-buildx

  release:
    name: Create Draft Release
    environment:
      name: release
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    needs:
      - job0
    steps:
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1
      - name: Prepare
        id: prepare
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo ::set-output name=tag_name::${TAG}
      - uses: actions/checkout@v4
      - name: Helm package
        run: |
          helm package deploy/charts/automq-operator
          git checkout .
          tar -czf automq-operator-${{ steps.prepare.outputs.tag_name }}-sealos.tgz deploy/
      - name: Create artifacts directory
        run: |
          mkdir -p artifacts
          mv *.tgz artifacts/
      - name: Show artifacts
        run: ls -alhR artifacts
      - name: Create release draft
        shell: bash
        run: |
          set -x
          gh release create "${{ github.ref }}" -t "${{ steps.prepare.outputs.tag_name }} Release" --generate-notes --draft
          gh release upload "${{ github.ref }}" artifacts/*
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
  build-sealos:
    name: build sealos images
    runs-on: ubuntu-22.04
    needs:
      - release
    steps:
      - name: Prepare
        id: prepare
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo ::set-output name=tag_name::${TAG}
      - uses: actions/checkout@v4
      - name: Verify sealos
        run: |
          curl -sfL https://raw.githubusercontent.com/labring/sealos/v5.0.0/scripts/install.sh | sh -s v5.0.0  labring/sealos
      - name: build
        run: |
          wget -q https://github.com/cuisongliu/automq-operator/releases/download/${{ steps.prepare.outputs.tag_name }}/automq-operator-${{ steps.prepare.outputs.tag_name }}-sealos.tgz
          mkdir -p automq-operator && tar -xzf automq-operator-${{ steps.prepare.outputs.tag_name }}-sealos.tgz -C automq-operator
          cd automq-operator/deploy
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/automq-operator-sealos:${{ steps.prepare.outputs.tag_name }}"
          sudo sealos build -t "${IMAGE_NAME}"-amd64 --platform linux/amd64 . && sudo rm -rf registry
          sudo sealos build -t "${IMAGE_NAME}"-arm64 --platform linux/arm64 . && sudo rm -rf registry
          sudo sealos login -u ${{ github.repository_owner }} -p ${{ secrets.GH_TOKEN }} --debug ghcr.io
          bash manifest.sh ${IMAGE_NAME}
  sync-sealos-cluster-images:
    name: sync sealos cluster images
    runs-on: ubuntu-22.04
    needs:
      - build-sealos
    steps:
      - name: Prepare
        id: prepare
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo ::set-output name=tag_name::${TAG}
      - name: build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh issue comment ${{ vars.SEALOS_ISSUE_NUMBER }} --body "/imagebuild_apps automq-operator ${{ steps.prepare.outputs.tag_name }}" --repo ${{ vars.SEALOS_ISSUE_REPO }}
