apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "automq-operator.fullname" . }}
  annotations:
    kubectl.kubernetes.io/default-container: {{ .Chart.Name }}
  labels:
    {{- include "automq-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "automq-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "automq-operator.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ include "automq-operator.fullname" . }}-cert
      serviceAccountName: {{ include "automq-operator.fullname" . }}
      terminationGracePeriodSeconds: 10
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image }}"
          imagePullPolicy: IfNotPresent
          args:
          - "-leader-elect={{.Values.args.leader}}"
          - "-default-burst={{.Values.args.burst}}"
          - "-default-concurrent={{.Values.args.concurrent}}"
          - "-default-qps={{.Values.args.qps}}"
          - "-max-retry-delay={{.Values.args.maxDelay}}"
          - "-min-retry-delay={{.Values.args.minDelay}}"
          - "-mount-tz={{.Values.args.mountTZ}}"
          - "-zap-devel=false"
          - "-zap-encoder=console"
          env:
            - name: NAMESPACE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
                  apiVersion: v1
            - name: ENABLE_WEBHOOKS
              value: "{{.Values.webhook.enabled}}"
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - name: http
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: kube-rbac-proxy
          image: "gcr.io/kubebuilder/kube-rbac-proxy:v0.14.1"
          imagePullPolicy: IfNotPresent
          args:
            - "--secure-listen-address=0.0.0.0:8443"
            - "--upstream=http://127.0.0.1:8080/"
            - "--logtostderr=true"
            - "--v=0"
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
